<Window x:Class="ImageSqueezer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageSqueezer"
        xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" ResizeMode="NoResize"
        >
    <Window.Resources>
        <LinearGradientBrush x:Key="WindowBackgroundBrush">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Black" Offset="0.0"/>
                    <GradientStop Color="Red" Offset="1.1"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="GridBackgroundBrush">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0"/>
                    <GradientStop Color="DarkRed" Offset="0.6"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <Style TargetType="Grid">
            <Setter Property="Background" Value="{StaticResource ResourceKey=GridBackgroundBrush}"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Georgia" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Height="15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.15*"/>
                                <ColumnDefinition Width="0.85*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="CheckRectangle" Grid.Column="0">
                                <Rectangle.Fill>
                                    <LinearGradientBrush>
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="White" Offset="0.0"/>
                                                <GradientStop Color="DarkRed" Offset="0.6"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Path 
                                x:Name="Arrow"
                                Grid.Column="0"     
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"                  
                                Fill="Black"
                                Visibility="Hidden"
                                Data ="M 1 9 1 2 L 4 4 L 8 0 Z"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckRectangle" Property="Fill" Value ="Black"/>
                            </Trigger>-->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="Georgia" />
        </Style>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FontFamily" Value="Georgia" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush>
                        <GradientStopCollection>
                            <GradientStop Color="Black" Offset="0" />
                            <GradientStop Color="Red" Offset="1.1" />
                        </GradientStopCollection>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Button.BorderBrush" Value="Red" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush>
                                            <GradientStopCollection>
                                                <GradientStop Color="Black" Offset="0" />
                                                <GradientStop Color="Black" Offset="1.1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush>
                                            <GradientStopCollection>
                                                <GradientStop Color="Black" Offset="0" />
                                                <GradientStop Color="Black" Offset="1.1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Georgia" />
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush>
                        <GradientStopCollection>
                            <GradientStop Color="Black" Offset="0" />
                            <GradientStop Color="Red" Offset="1.1" />
                        </GradientStopCollection>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Button.BorderBrush" Value="Red" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush>
                                            <GradientStopCollection>
                                                <GradientStop Color="Black" Offset="0" />
                                                <GradientStop Color="Black" Offset="1.1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2"
                  Background="Black"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="2, 0, 0, 2" 
                  Margin="1" 
                  Background="{StaticResource WindowBackgroundBrush}" 
                  BorderBrush="White"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"                  
                  Fill="White">
                    <Path.Data>
                        <CombinedGeometry Geometry1="M 1 9 1 2 L 4 4 L 8 0 Z"/>
                        <!--="M 0 0 L 4 4 L 8 0 Z"-->
                    </Path.Data>
                </Path>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>

        </ControlTemplate>


        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                                 Name="ToggleButton" 
                                 Template="{StaticResource ComboBoxToggleButton}" 
                                 Grid.Column="2" 
                                 Focusable="false"
                                 IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 ClickMode="Press"
                            />

                            <ContentPresenter
                                Width="112"
                                Height="20"                               
                                Name="ContentSite"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Content="{TemplateBinding SelectionBoxItem}"
                                IsHitTestVisible="False"                                
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                TextBlock.Foreground="White"
                                Margin="3,3,23,3"
                             />

                            <!--<TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}" 
                                 Template="{StaticResource ComboBoxTextBox}" 
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3,3,23,3"
                                 Focusable="True" 
                                 Background="Transparent"
                                 Visibility="Visible"
                                 IsReadOnly="True"
                                 Width="100"
                                 Height="20"  
                                 Foreground="White"
                            />-->

                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Fade">

                                <Grid 
                                Name="DropDown"
                                SnapsToDevicePixels="True"                
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                    <Border 
                                x:Name="DropDownBorder"
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderThickness="1"/>

                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition Width="0.6*"/>
            <ColumnDefinition Width="0.2*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Margin="20, 10, 20, 10">
            <Button x:Name="OpenFolderButton" Click="OpenFolderButton_Click">
                <Button.Content>
                    <TextBlock Margin="0,5">Open Folder</TextBlock>
                </Button.Content>
            </Button>
            <Separator Height="20" Visibility="Hidden"/>
            <Button x:Name="ButtonOpenFile" Click="ButtonOpenFile_Click">
                <Button.Content>
                    <TextBlock Margin="0,5"> Open File</TextBlock>
                </Button.Content>
            </Button>
            <Separator Height="20" Visibility="Hidden"/>
            <CheckBox x:Name="CheckBoxEncodeAllFiles" Content="Encode all files" Margin="0, 5"/>
            <Button x:Name="ButtonHandleImages" Click="ButtonHandleImages_Click">
                <Button.Content>
                    <TextBlock Margin="0, 5">Start encoding</TextBlock>
                </Button.Content>
            </Button>
            <WrapPanel Margin="0, 10, 0, 0">
                <Button x:Name="ButtonTurnLeft" Width="20" Height="20" Click="ButtonTurnLeft_Click">L</Button>
                <Separator Width="76" Visibility="Hidden"/>
                <Button x:Name="ButtonTurnRight"  Width="20" Height="20" Click="ButtonTurnRight_Click">R</Button>
            </WrapPanel>


            <Image x:Name="ImageOverview" Width="120" Height="144" Margin="0, 10, 0, 0">
            </Image>
            <Button x:Name="ButtonClear" Click="ButtonClear_Click" Margin="0, 10, 0, 0">
                <Button.Content>
                    <TextBlock Margin="0,5">Clear list</TextBlock>
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel Grid.Column="2" Grid.RowSpan="3" Margin="10, 0, 10, 10">
            <Label>Type of encoder</Label>
            <ComboBox x:Name="ComboBoxTypeOfEncoders">
                <ComboBoxItem Content="JPEG"/>
                <ComboBoxItem Content="TIFF"/>
                <ComboBoxItem Content="PNG"/>
                <ComboBoxItem Content="GIF"/>
                <ComboBoxItem Content="BMP"/>
            </ComboBox>
            <Label>Quality of image</Label>
            <ComboBox x:Name="ComboBoxQuality" IsEnabled="False" SelectedIndex="10">
                <ComboBoxItem Content="0"/>
                <ComboBoxItem Content="10"/>
                <ComboBoxItem Content="20"/>
                <ComboBoxItem Content="30"/>
                <ComboBoxItem Content="40"/>
                <ComboBoxItem Content="50"/>
                <ComboBoxItem Content="60"/>
                <ComboBoxItem Content="70"/>
                <ComboBoxItem Content="80"/>
                <ComboBoxItem Content="90"/>
                <ComboBoxItem Content="100"/>
            </ComboBox>
            <Label>Type of compression</Label>
            <ComboBox x:Name="ComboBoxCompression" IsEnabled="False" SelectedIndex="0">
                <ComboBoxItem Content="NONE"/>
                <ComboBoxItem Content="LZW"/>
                <ComboBoxItem Content="CCITT3"/>
                <ComboBoxItem Content="CCITT4"/>
                <ComboBoxItem Content="RLE"/>
            </ComboBox>
            <Label>Color Depth</Label>
            <ComboBox x:Name="ComboBoxColorDepth" IsEnabled="False">
                <ComboBoxItem Content="1"/>
                <ComboBoxItem Content="4"/>
                <ComboBoxItem Content="8"/>
                <ComboBoxItem Content="24"/>
            </ComboBox>

            <Label>Transformation</Label>
            <ComboBox x:Name="ComboBoxTransform" IsEnabled="False" SelectedIndex="0">
                <ComboBoxItem Content="0"/>
                <ComboBoxItem Content="90"/>
                <ComboBoxItem Content="180"/>
                <ComboBoxItem Content="270"/>
                <ComboBoxItem Content="Flip horizontal"/>
                <ComboBoxItem Content="Flip vertical"/>
            </ComboBox>
            <WrapPanel Margin="0, 10, 0, 0">
                <Label Width="50">Width</Label>
                <TextBox VerticalAlignment="Center" Background="LightCoral" x:Name="TextBoxWidth" Width="80" IsEnabled="False"></TextBox>
                <Label Width="50">Higth</Label>
                <TextBox VerticalAlignment="Center" Background="LightCoral" x:Name="TextBoxHeight" Width="80" IsEnabled="False"></TextBox>
            </WrapPanel>

            <StackPanel Grid.Row="2" Grid.Column="0" Margin="10, 10, 10, 10">
                <Button x:Name="ButtonApply"  Click="ButtonApply_Click" ToolTip="Apply settings for image">
                    <Button.Content>
                        <TextBlock Margin="0,5">Apply settings</TextBlock>
                    </Button.Content>
                </Button>
                <Separator Height="20" Visibility="Hidden"/>
                <ToggleButton x:Name="ToggleButtonAsyncState" IsChecked="True" >
                    <ToggleButton.Content>
                        <TextBlock Margin="0,5">Async encoding</TextBlock>
                    </ToggleButton.Content>
                </ToggleButton>
            </StackPanel>
        </StackPanel>
        <ListView x:Name="ListViewHandledImages" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Margin="10, 10, 10, 10" 
                  ScrollViewer.VerticalScrollBarVisibility="Visible" Background="{StaticResource GridBackgroundBrush}"
                 >
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Title}" Width="350">Title</GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=StringSize}" Width="70">Size</GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Window>
